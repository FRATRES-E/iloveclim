      subroutine iceberg(nit,iyear,ntotday,nn99)
#include "choixcomposantes.h"
! mab:nit=istep that is i(i=1,ntoday in emic.f),nn99 defines whether or not
! it is written to the file mouchard
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!--ancien (23/05/00) nom = icebst(.f)
!  modif : 23/03/00
!- Iterations pour calculer le deplacement des Icebergs.
!- il faut le faire ici car gener_iceb ecrit dans icbtraj.out
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! modified and English comments by Jochem Jongma january 2007
!- modif 24/10/19: cleaned use declaration sections                            
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- This is the MAIN iceberg loop, called daily by
!- clio/sources/clio.f221:         call iceberg(istep,iyear,nn99)
!- (nn99=2 means writing to mouchard)
!-
!- Here icebergs are
!- 1. GENERATED by gener_iceb if not parameterized old style
!- 2. GENERATED from positb.init production values if flag_read_positb
!- 3. MOVED and MELTED by iceb_traj, which calls icebdyn
!- 4. WRITTEN to track.out
!- 5. WRITTEN to restart file
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|


      use comemic_mod, only: flag_snow_to_flux

#if ( CALVFLUX == 1)
      USE icb_coupl, ONLY:  calvCLIO,mass_icb, ocn_mask
#endif

      use global_constants_mod, only: dblp=>dp, ip             
      use const_mod, only:
      use para0_mod, only: imax, jmax
      use para_mod, only:
      use bloc0_mod, only: tms, tpstot, nsav, dts, ks2, zw
      use bloc_mod, only: numit, refexp
      use ice_mod, only:
      use iceberg_mod, only: numtracki, filenumber, it_icb, numiticb,
     >    flag_read_positb, lmx, linit, nbricb, nbrplus_cum, xn0, yn0,
     >    xn, yn, hiceb0, wiceb0, pond_icb0, nbricb_s, nbrplus_cum_s,
     >    hiceb,wiceb,pond_icb,nbrplus_cum_n,remsim,uiceb, nbricb_n,
     >    kiceb,viceb,nbricb_moins,nbricb_moins_s,nbricb_moins_n,
     >    fonte_icb,dVol_icb,it_icbl, xn_old, yn_old, flag_output_icb,
     >    icbwrout, flag_write_iceb, nfricb, disticeb, nbtot_write_iceb,
     >    nbtot_write_max, flagstartwritten, id_abs_table, startxn,
     >    startyn, siceb, starthiceb, startwiceb,nitrunicb,
     >    flag_calv_coupl,icbexp,nsource, srcx,srcy,srch,srcw,debk,
     >    berg_mk,t_lach,pond, vol_orig,necriture,dticeb
      use reper_mod, only: xwi1, dxwi, ywj1, dywj


      implicit none
      
!APW dbug numit,nsav problem
!      common /dbug_numit_com/ liftoff
!APW

      integer(kind=ip) :: nit,iyear,ntotday,testvar,numtrack,filenum,
     >     fileday,ijm,irec,lmx_restart,nbwires,nbwires1,nbwicb
      real(kind=dblp) :: xpl1,xpl2,ypl1,ypl2
      character(len = 254) :: filetrackout,filetrajout
      logical :: plfound, sizechar

!PB variables added after imposing implicit none
      integer(kind=ip):: initstart,initend,kounter,l,k,i,j,ii,jj,nn99,
     >        icdist_lost,number_of_bergs,n_speeding,l_fastest
      integer(kind=ip), save :: liftoff
      real(kind=dblp) :: v_icb_max,v_fastest,volume_lost_pb,velocity_icb

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|      
      testvar = 0
      lmx_restart=0
      nbwires = 0
      nbwires1 = 0
      if(nit.eq.1) print*,'iceberg: nit:',nit,numtracki,filenumber
      if(nit.eq.361) print*,'iceberg: nit:',nit,numtracki,filenumber

      if(nit.eq.361) filenumber = 1
      if(nit.eq.361) numtracki = 1
! mab: gives the year
      if(mod(nit,360).eq.0) testvar=int(nit/360)
      if(mod(nit,360).ne.0) testvar=int(nit/360)+1
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! this is the start of the MAIN loop, see goto 850 below
! "while" (dticeb*it_icb).ne.(dts(ks2)*nit):
! mab:dticeb=86400 (defined in positb.init and read in deficeb.f)
 850  it_icb = it_icb+1
      numiticb=numiticb+1

!      write(*,*) 'iceberg.f: ',it_icbl,it_icb
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! 1. Icebergs are generated {seasonal dependence is zero atm}
!    UNLESS they are parameterised
!    (old style: excess snow to land bucket in landmodel & heat 2 phiss1)

! mab: .not.flag_snow_to_flux corresponds to scenario 1 and 2
      if (.not.flag_snow_to_flux) then
         call gener_iceb
      endif

#if ( CALVFLUX == 1 )
      if (flag_calv_coupl) then
        if(sum(mass_icb(:,:)).gt.0d0 .or. sum(calvCLIO(:,:)).gt. 0d0) then
          call calvCoupl(nit,ntotday)
        elseif (lmx .gt. 0) then
! mab: HERE LMX IS MODIFIED
          if(nit .eq. 1) then
            id_max_used = lmx
            DO i=1,id_max_used
              id_abs_table(i) = i
            ENDDO
          else
            id_max_used = id_abs_table(lmx)
          endif

         CALL rearrange_lmx_arrays(lmx)

!! mab & dmr pay attention, lmx can go to zero after some years without
!! bergs but id_abs_table SHOULD NOT be set to zero
!! The correct fix would be to rely the first if (cday.eq.1) on
!! the first day of first year after GRISLI coupling. That is easy with
!! parameters that are set in input_timer_CPL_GRISLI.f90
          if(mod(it_icb,30).eq.0)print*,'iceberg.f,lmx: ',lmx,id_max_used
        endif
      endif
#endif
! checking all bergs for: off the grid or on land
!        do 165 l=0,initend
! THIS should be done in deficeb (if its not there),
! CHECK: but how about testing the bergs from gener_icb?

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! 2. produce icebergs from
!    production vars xn0(1-linit) read from positb.init in deficeb.f

      if (flag_read_positb) then

!----------------------------------------------------------------------

        if (mod( (numit-liftoff),1).eq.0) then
! produce icebergs DAYLY
!
!        if(mod( (numit-liftoff-1), 30 ).eq.0) then
! at start of each MONTH. (APW says numit-liftoff is at least 1)
! rwr   write(99,*) 'APW production-loop numit,liftoff,lmx,linit',
! rwr    &      numit,liftoff,lmx,linit
!----------------------------------------------------------------------
! mab: lmx is set to 0 in deficeb.f -> initstart =1,initend=linit
! mab: linit = nr of icebergs defined in positb.init
      initstart=lmx+1
          initend=lmx+linit
          lmx=initend
          nbricb=nbricb+linit
          nbrplus_cum=linit
          kounter=1
!----------------------------------------------------------------------
!- production from vars xn0(1-linit) (read from positb.init in deficeb)
!- see more comments in deficeb
          do 160 l=initstart,initend
         xn(l)=xn0(kounter)
         yn(l)=yn0(kounter)
         hiceb(l)=hiceb0(kounter)
         wiceb(l)=wiceb0(kounter)
         pond_icb(l)=pond_icb0(kounter)
         kounter=kounter+1

!- update nbricb_
             if(yn(l).lt.0.) then
               nbricb_s=nbricb_s+1
               nbrplus_cum_s=nbrplus_cum_s+1
             endif
         if(yn(l).ge.0.) then
           nbricb_n=nbricb_n+1
           nbrplus_cum_n=nbrplus_cum_n+1
         endif

!- set depth kiceb of new bergs
             kiceb(l)=ks2
             do 175 k=ks2,2,-1
               if (-zw(kiceb(l)).le.hiceb(l)) then
                 kiceb(l)=k-1
               else
                 goto 175
               endif
 175         continue
!-
             if(nn99.eq.2)
     &       write(99,*)'iceberg.f new berg at it_icb:',it_icb,
     &            'depth kiceb(',l,') = ',kiceb(l)

!----------------------------------------------------------------------
! check of start position and depth of new positb bergs
! mab: xwi1=25.5,dxwi=dlon=360/nlon.nlon=64 or dlon=1/dmax??
! mab: ywj1=-79.5,dywj=dlat=1/dmax ??
             i=1+nint((xn(l)-xwi1)/dxwi)
             j=1+nint((yn(l)-ywj1)/dywj)
!------
             if (i.lt.1.or.i.gt.imax.or.j.lt.1.or.j.gt.jmax.or.
     &           tms(i,j,ks2).eq.0) then

!_contradictory with setting of kiceb above   if (kiceb(l).gt.-1) then
               volume_lost_pb = volume_lost_pb +
     &          (1+remsim)*hiceb(l)*wiceb(l)*1.5*wiceb(l)*pond_icb(l)

               write(99,*) 'JA_iceberg.f WARNING!!!; ',
     &           'new positb iceberg out of range or on land: ',
     &           'kiceb(',l,')=',kiceb(l),
     &           'hiceb=',hiceb(l),'wiceb=',wiceb(l),
     &           'uiceb=',uiceb(l),'viceb=',viceb(l),
     &           ' at i,j,x,y=',i,j,xn(l),yn(l),
     &           ' where land mask tms(ks2)=',tms(i,j,ks2),
     &           ' ELIMINATEd (k -> -1) without compensation!!!',
     &           ' Total volume lost=', volume_lost_pb

!--- ELIMINATEd without compensation:
               kiceb(l) = -3
               uiceb(l) = 0.
               viceb(l) = 0.
               nbricb_moins=nbricb_moins+(1*pond_icb(l))
               if(j.le.int(jmax/2))nbricb_moins_s=nbricb_moins_s
     &           +(1*pond_icb(l))
               if(j.gt.(int(jmax/2)+1))nbricb_moins_n=nbricb_moins_n
     &           +(1*pond_icb(l))
!---
!_contradictory with setting of kiceb above    endif
             endif
!------

!----------------------------------------------------------------------
!--- end of new (positb) icebergs loop
 160      continue

!----------------------------------------------------------------------
!- end if mod( (numit-liftoff),1).eq.0)
        endif

!----------------------------------------------------------------------
!- end if flag_read_positb
      endif

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!-
!- 3. iceberg position, movement and melt is calculated
!- reset melt; call icebtraj, which makes call icebdyn:
!-
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!----------------------------------------------------------------------
!- reset fonte and dVol
! mab:i,j are defined as i=1+nint((xn(l)-xwi1)/dxwi) and j=1+nint((yn(l)-ywj1)/dywj)
! here they are used again in the loop, but in call iceb_moy they are given to the
! subroutine, maybe generates problemes!->change i,j in the loops to ii,jj
      do ii=1,imax
        do jj=1,jmax
           fonte_icb(ii,jj)=0.
          do k=1,ks2
            dVol_icb(ii,jj,k)=0.
          enddo
        enddo
      enddo

!----------------------------------------------------------------------
      if (lmx .gt. 0) then
!-
      it_icbl=it_icbl+1
      call icebtraj(nit)
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- MAB: COUNTING THE AMOUNT OF ICEBERGS PASSING BY ONE GRIDCELL EVERY DAY
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!-
         if(nit .eq. 1) then
           xn_old=0d0
           yn_old=0d0
         endif
         do l=1,lmx
!mab - counting the bergs passing by the grid cells
          if(xn(l).ne.xn_old(l).or.yn(l).ne.yn_old(l)) then
            plfound = .false.
            xpl1=25.5+3.0*92
            xpl2=25.5+3.0*120
            ypl1=-81.0+3.0*29
            ypl2=-81.0+3.0*65
            if(xn(l).ge.xpl1 .and. xn(l) .le. xpl2 .and.
     &        yn(l) .ge. ypl1 .and. yn(l) .le. ypl2 ) then
              do while (.not. plfound)
              do ii=93,120
                xpl1=25.5+3.0*(ii-1)
                xpl2=25.5+3.0*(ii)
                do jj= 30,65
                  ypl1=-81.0+3.0*(jj-1)
                  ypl2=-81.0+3.0*(jj)
                  if( xn(l) .ge. xpl1 .and. xn(l) .lt. xpl2 ) then
                    if( yn(l) .ge. ypl1 .and. yn(l) .lt. ypl2 ) then
                      disticeb(ii-1,jj-1)=disticeb(ii-1,jj-1)+1.0
                      plfound = .true.
!                      write(*,*) 'disticeb: ',int(disticeb(ii-1,jj-1))
                    endif
                  endif
                enddo
              enddo
              enddo
              plfound = .false.
              xn_old(l) = xn(l)
              yn_old(l) = yn(l)
            else
             icdist_lost=icdist_lost+1
!               write(*,*) xn(l),yn(l)
            endif
          endif
         enddo

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- 4.a WRITING tracks every nfricb days
!- ecriture d un bloc
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
      if (flag_output_icb) then
        if (nit .ge. (ntotday-icbwrout)) then
          flag_write_iceb = .TRUE.
        else
          flag_write_iceb = .FALSE.
        endif
      endif

      if (flag_write_iceb) then
        if (mod(it_icb,nfricb).eq.0)then
!mab: commented, mouchard was too big
!          write(99,*) 'iceberg.f writing iceberg tracks to ',
!     &      'track.out and icbtraj2.out at it_icb=',it_icb
!mab: end of commented part
!----------------------------------------------------------------------
!- All icebergs 'l' are written, except those w kiceb=-2 (lower then -1)
!- calcul du nombre d iceberg a ecrire
          nbwicb=0
          do 202 l=1,lmx
            if (kiceb(l).ge.-1) nbwicb=nbwicb+1
 202      continue

!----------------------------------------------------------------------
! OPEN and write header to
!   traj output file is 1056= icbtraj2.out 1057=track.out
!   refexp is read from 59 = resicb.om
!   nbwicb is amount of icebergs to be written
!   numiticb is iteration nr (not reset like it_icb?)
!   tpstot is some time:gener_iceb.f: nbrjour=(mod(tpstot,yrsec)/86400)
!   iyear is some year nr
          nbtot_write_iceb = nbtot_write_iceb+nbwicb
          fileday = (testvar-1)*360 + 30
!          print*,'in iceberg.f 1:',numtracki,filenumber,nbtot_write_iceb,
!     &                           nbtot_write_max,fileday,nit

          if (nbtot_write_iceb.lt.nbtot_write_max.and.filenumber.eq.1)then
!          numtracki = 1
            write(filetrackout,'(A,I6.6,A)')'outputdata/icebergs/track',
     &      numtracki,'.out'
            write(filetrajout,'(A,I6.6,A)')
     &       'outputdata/icebergs/icbtraj2_status',numtracki,'.out'
            open (1057,file=trim(filetrackout),status='unknown')
!       write (1057,'(A8, 3I11)') refexp,nbwicb,iyear,numiticb
            open (1056,file=trim(filetrajout),status='unknown')
!          write(1056,'(A8,3I7,1F18.1,1I5)')
!     &     refexp,nbwicb,numiticb,it_icb,tpstot,iyear

! mab: opens new track.out and traj.out files so that they don't get too
!      big to be plotted
          else if (nbtot_write_iceb.ge.nbtot_write_max.and.
     &             nit.eq.fileday) then
!            print*,'in elseif',mod(nit,360)
            nbtot_write_iceb = 0
            numtracki = numtracki + 1
            filenumber = filenumber + 1
            close(1057)
            close(1056)

            write(filetrackout,'(A,I6.6,A)')'outputdata/icebergs/track',
     &      numtracki,'.out'
            write(filetrajout,'(A,I6.6,A)')
     &        'outputdata/icebergs/icbtraj2_status',numtracki,'.out'
            open (1057,file=trim(filetrackout),status='unknown')
!            write (1057,'(A8, 3I11)') refexp,nbwicb,iyear,numiticb
            open (1056,file=trim(filetrajout),status='unknown')
!            write(1056,'(A8,3I7,1F18.1,1I5)')
!     &      refexp,nbwicb,numiticb,it_icb,tpstot,iyear
          endif

            write (1057,'(A8, 3I11)') refexp,nbwicb,iyear,numiticb
            write(1056,'(A8,3I7,1F18.1,1I5)')
     &      refexp,nbwicb,numiticb,it_icb,tpstot,iyear
!       write(*,*),'in iceberg.f 2:',numtracki,filenumber,
!     &  trim(filetrajout) ,trim(filetrackout)
!----------------------------------------------------------------------
!- writing the tracks
          do 203 l=1,lmx
            if( nit .eq. ntotday) lmx_restart=lmx_restart+1
!mab: writting starting position
              if (kiceb(l).ge.-1) then
              IF (flagstartwritten (l) .eq. 0) THEN
                write(1057,'(1I10,2F8.2)') id_abs_table(l)
     &                                ,real(startxn(l)),real(startyn(l))
                write(1056,'(1I10,2F10.4,2I10,2F10.2,2F6.1,1F4.1)')
     &          id_abs_table(l),real(startxn(l)),real(startyn(l))
     &          ,int(siceb(l)),kiceb(l),real(uiceb(l)),real(viceb(l)),
     &          real(starthiceb(l)),real(startwiceb(l)),real(pond_icb(l))
                flagstartwritten (l) = 1

              ENDIF

              write(1057,'(1I10,2F8.2)') id_abs_table(l),real(xn(l)),real(yn(l))
!              if (siceb(l) .gt. 0) write(*,*) 'siceb : ',int(siceb(l))
              write(1056,'(1I10,2F10.4,2I10,2F10.2,2F6.1,1F4.1)')
     &          id_abs_table(l),real(xn(l)),real(yn(l)),int(siceb(l)),kiceb(l),
     &          real(uiceb(l)),real(viceb(l)),
     &          real(hiceb(l)),real(wiceb(l)),real(pond_icb(l))

            endif
 203      continue

          if(nit .eq. ntotday) then
#if (CALVFLUX == 1)
            where(ocn_mask .EQ. 0)
              disticeb = -99999.E0
            endwhere
#endif
            ijm=Size(disticeb)*Kind(disticeb(1,1))
            open(1010,file='outputdata/icebergs/distrib.dat'
     &      ,status='replace',form='formatted')
            open(1011,file='outputdata/icebergs/distrib_bin.dat',
     &      recl=ijm,status='replace',form='unformatted',access='direct')
            irec = 1
            write(1011,rec=irec) disticeb
            do ii=1,imax
            xpl1=(25.5+3.0*(ii-1)+25.5+3.0*(ii))/2.
            do jj=1,jmax
            ypl1=(-81.0+3.0*(jj-1)+(-81.0)+3.0*(jj))/2.
            write(1010,'(2I5,2F7.2,F20.4)') ii,jj,xpl1,ypl1,
     &      disticeb(ii,jj)
            enddo
            enddo
           write(1010,*) 'icdist_lost: ', icdist_lost
           close(1010)
           close(1011)
          endif

!----------------------------------------------------------------------
!- stop writing  and close files,
!- when more then nbtot_write_max icebergs written
          if (nbtot_write_iceb.ge.nbtot_write_max) then
!             flag_write_iceb = .FALSE.
!             write(99,*)'WARNING iceberg.f: writing stopped',
!     &       ' at it_icb=',it_icb,', due to',
!     &        nbtot_write_iceb,'= total # of bergs written',
!     &       ' exceeding nbtot_write_max=', nbtot_write_max,
!     &       '(read from 30=positb.init in deficeb.f)'

!             write(1057,*)'WARNING iceberg.f:',
!     &       ' nr of written bergs:',nbtot_write_iceb,
!     &       'reached maximum',nbtot_write_max,'at it_icb=',it_icb
!             close(1057)
!            write(1056,*)'WARNING iceberg.f:',
!     &       ' nr of written bergs:',nbtot_write_iceb,
!     &       'reached maximum',nbtot_write_max,'at it_icb=',it_icb
!             close(1056)
!- 1059 is used in icebdyn.f
          write(1059,*)'WARNING new file was opend,nbtot_write_iceb,max'
          write(1059,*)nbtot_write_iceb,nbtot_write_max
          close(1059)
!- CHECK 2007: 1054 was 54; was meant for gener_icb
          close(1054)
          endif

!----------------------------------------------------------------------
!- closing files if run will allready be finished next time around:
          if ((it_icb+nfricb).gt.nitrunicb) then
            write(99,*) 'CLOSING iceberg .out files at',it_icb
            close(1056)
            close(1057)
            write(1059,*) 'iceberg.f; closing icbtraj.out at',it_icb
            close(1059)
!- CHECK 2007: 1054 was 54; was meant for gener_icb
            close(1054)
          endif

!----------------------------------------------------------------------
!- once the writing loop was entered, kiceb can go from
!- -1 (ELIMINATEd) to -2 (free spot)
          do 231 l=1,lmx
            if (kiceb(l).eq.(-1)) then
               kiceb(l)=-2
! JONO kiceb; xn, yn changed when kiceb set to -2 instead of -1 (in icebtraj)
! CHECK consequences for 'if xn 999' in iceb_out:135: and :192:
               xn(l)=999.
	       yn(l)=it_icb
            endif
 231      continue

!----------------------------------------------------------------------
!- end of if mod(it_icb,nfricb).eq.0 loop
         endif

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!-     else=.NOT.flag_write_iceb) then
       else

!- when not writing anything,
!-   the spot (l) of ELIMINATEd icebergs ( kiceb(l)=-1),
!-   can be freed ( kiceb(l)=-2 )
         do 232 l=1,lmx
           if (kiceb(l).eq.(-1)) then
               kiceb(l)=-2
	       xn(l)=999.
	       yn(l)=it_icb
! see notes above
           endif
 232     continue

!----------------------------------------------------------------------
!- end of if flag_write_iceb loop
       endif

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- 4.b iceb_moy is an outputting routine
! mab:i,j define the position in the grid, nit=1,ntotday given from emic.f
       call iceb_moy(i,j,nit)

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!----------------------------------------------------------------------
!- 4.c this is a warning loop for high speed bergs {m/s} (?)
!- n99=2 is flag for writing auxilary info to mouchard means"is allowed"
! hmm, nn99 is zero?
!dbug      if (nn99.eq.2) then
        number_of_bergs = 0
        n_speeding = 0
        v_icb_max = 5.
        v_fastest = 0.
        l_fastest = 0
        do 350 l=1,lmx
          if (kiceb(l).gt.-1) then
            number_of_bergs = number_of_bergs + 1
            velocity_icb=sqrt(uiceb(l)*uiceb(l)+viceb(l)*viceb(l))
            if(velocity_icb.ge.v_icb_max) then
              n_speeding = n_speeding + 1
            endif
!- finding the fastest bergs
            if (velocity_icb.gt.v_fastest) then
              v_fastest = velocity_icb
              l_fastest = l
            endif
          endif
 350    continue

        if (n_speeding.ge.1) then
          write(99,*) 'WARNING iceberg.f: at it_icb',it_icb,
     &    'there were', n_speeding,'out of', number_of_bergs,
     &    'icebergs going faster then',
     &     v_icb_max,' Top-speed was:',v_fastest,'{m/s}(?)',
     &    'By iceberg(',l_fastest,'), with ',
     &    'hiceb:',hiceb(l_fastest),'wiceb:',wiceb(l_fastest),
     &    'kiceb:',kiceb(l_fastest),'nn99',nn99
        endif
!dbug      endif
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- 5. Write restart file resicb.om
!- ecriture du fichier de sauvegarde 'resicb.om'
!----------------------------------------------------------------------
! rwr         write(99,*) 'APW iceberg.f:numit,nsav,numit-liftoff',
! rwr     &   numit,nsav,numit-liftoff

       if( .not. flag_calv_coupl ) then
       if (mod(numit-liftoff,nsav).eq.0) then
! rwr         write(99,*)'APW iceberg.f numit,nsav,liftoff',
! rwr     &   numit,nsav,liftoff
         open(59,file='resicb.om',status='unknown',form='unformatted')
         write(99,*) 'APW resicb geopend'
         write(59) numiticb, tpstot, refexp, icbexp
         write(59)nbricb,nbricb_n,nbricb_s,
     &             nsource,lmx,nbtot_write_iceb
! mab: change j here to jj (see coment line 186)
         do 110 jj=1,nsource
         write(59) srcx(jj),srcy(jj),srch(jj),srcw(jj),debk(jj),
     &           berg_mk(jj),t_lach(jj),pond(jj)
         write(99,*) 'APW write sources2 resicb.om:', srcx(jj),srcy(jj),
     &           srch(jj),srcw(jj),debk(jj),berg_mk(jj),t_lach(j),pond(jj)
 110     continue

          do 800 l=1,lmx
           write(59) xn(l),yn(l),uiceb(l),viceb(l),hiceb(l),wiceb(l),
     &                   kiceb(l),pond_icb(l)
           write(99,*) 'APW write bergs to resicb.om', xn(l),yn(l),
     &                   uiceb(l),viceb(l),hiceb(l),wiceb(l),kiceb(l),
     &                   pond_icb(l)
 800     continue
         close(59)
         endif

! mab----- new VERSION of resicb.om for CALVING!!
       elseif (flag_calv_coupl) then
         if ( nit .eq. ntotday ) then
           open(59,file='resicb.om',status='unknown',form='unformatted')
           do l=1,lmx
           if (kiceb(l) .ge. -1) nbwires=nbwires+1
           enddo
           write(*,*) 'iceberg f:', nbwires
           write (59) refexp,nbwires,iyear,numiticb
           nbwires1=1
           do l=1,lmx
             if(kiceb(l) .ge. -1) then
!                xn_res(nbwires1)=xn(l)
             nbwires1=nbwires1+1
                write(59) xn(l),yn(l),siceb(l),kiceb(l),
     &            uiceb(l),viceb(l),
     &            hiceb(l),wiceb(l),pond_icb(l)
                write(16,*)  xn(l),yn(l),siceb(l),kiceb(l),
     &            uiceb(l),viceb(l),
     &            hiceb(l),wiceb(l),pond_icb(l)
             endif
             vol_orig(l)=wiceb(l)*wiceb(l)*1.5
     &                 *hiceb(l)*(1+remsim)*pond_icb(l)
           enddo
           print*,'sum vol:',sum(vol_orig(:))
     &      ,sum(vol_orig(:))*0.91/1E6/(86400.*360.)
           write(*,*)'in iceberg.f 2, nbwires1:', nbwires1
           close(59)
         endif
       endif !(flag_calv_coupl)
       endif !if lmx gt 0

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
       if ( nit .eq. ntotday .and. flag_calv_coupl) then
         open(59,file='resvol.om',status='unknown',form='unformatted')
         write(59) dVol_icb
         close(59)
       endif


!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- this looks redundanT
      if (mod(nit,nfricb).eq.0) then

! JONO deleted commented stuff here
        write(99,*)'iceberg.f debug: mod(nit,nfricb).eq.0-loop entered'
        necriture=necriture+1
!- grepping necriture:
!- deficeb.f:113:      necriture=0
!- iceb_out.f:102:      do 2000 i=1,(necriture+1)
!- iceb_out.f:115:        if (i.le.necriture) then

      endif
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- this is a different way of formulating a 'while' loop ;)
! mab:dticeb=86400 (defined in positb.init and read in deficeb.f)
! ks2 is iceberg depth in layer number???
! dts is defined in clio/parameters/run.param and set to 86400 in all layers??
! that means that if 86400*it_icb .ne. 1.*i(i=1,ntotday)
! ks2 = ocean layers = 20, 20=surface
       if ((dticeb*it_icb).ne.(dts(ks2)*nit)) then
          goto 850
       else
          goto 900
       endif

 900   continue

      return
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- fin de la routine iceberg -
      end subroutine iceberg
