!dmr -- Ajout du choix optionnel des composantes - Tue Dec 15 16:33:22 CET 2009
#include "choixcomposantes.h"
!dmr -- Ajout du choix optionnel des composantes - Tue Dec 15 16:33:22 CET 2009

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!--ancien (23/05/00) nom = icebst(.f)
!  modif : 23/03/00
!- Iterations pour calculer le deplacement des Icebergs.
!- il faut le faire ici car gener_iceb ecrit dans icbtraj.out
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! modified and English comments by Jochem Jongma january 2007
!- modif 24/10/19: cleaned use declaration sections 
!- modif 15/6/2020: pbakker; cleaned many parts; removed flag_calv_coupl, flag_output_icb
!- modif 30/6/2020: pbakker; moved all output writing statements to iceb_out.f
!- modif 30/6/2020: pbakker; introduced calls to iceberg_forcing and convert_flux_to_icebergs
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- This is the MAIN iceberg loop, called daily by
!- clio/sources/clio.f221:         call iceberg(istep,iyear)
! mab:istep is i(i=1,ntoday in emic.f)

!- Here icebergs are
!- 1. GENERATED by iceberg_forcing if forcing_icb == 1 read from positb.init
!- 2. GENERATED by convert_flux_to_icebergs if ICEBERG == 2; either from excess snow (ISM !=2) or from calved ice from GRISLI (ISM==2)
!- 3. INTRODUCE daily icebergs through introduce_icebergs; same number year round, only on day=360 all remaining bergs are introduced
!- 3. MOVED and MELTED by iceb_traj, which calls icebdyn
!- Note: you can have both an iceberg forcing and a coupling to excess snow or GRISLI. In that case mass is not conserved.
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
     
      subroutine iceberg(istep)

!! START_OF_USE_SECTION

      use global_constants_mod, only: dp, ip, days_year360d_i            
      use dynami_mod,  only: area
      use bloc0_mod, only: dts, ks2
      use iceberg_mod, only: it_icb
     &    ,lmx,kiceb,dVol_icb,iceberg_info_out_id
     &    ,dticeb,forcing_icb
     &    ,convert_flux_to_icebergs ! subroutine to convert the ice flux into a list of icebergs for the whole year
     &    ,iceberg_forcing ! subroutine for imposing Armade iceberg forcing
     &    ,rearrange_lmx_arrays ! subroutine to rearrange the lmx array
     &    ,iceb_list2clio ! create clio-type output arrays
     &    ,introduce_icebergs ! impose part of the icebergs from the iceberg list of the whole year
     &    ,iceb_writetracks ! to write iceberg tracks to text files
     
#if ( ICEBERG == 2 && ISM != 2 )
     &    ,iceflux_in_snow ! use statement to include excess snow iceberg flux
#elif ( ICEBERG == 2 && ISM == 2)
     &    ,iceflux_in_calv ! use statement to include calved flux
      use varsCONSEAU_mod, only: calgrisCLIO ! m**3.s-1
      use ice_mod, only: ddtb
#endif

!! END_OF_USE_SECTION

     
      implicit none
     
      integer(kind=ip) :: istep, l
      logical          :: output_tracks
      logical          :: itsopen

      
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! Start of the MAIN loop, see goto 850 below
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|

! 850  it_icb = it_icb+1
      do while ((dticeb*it_icb).ne.(dts(ks2)*istep))
        it_icb = it_icb+1 !counter of number of iceberg code iterations; only used when iceberg code is not performed every ocean time-step

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! 1) Select way of iceberg production: A, B or C (combinations not possible)
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
! A) Impose icebergs read from positb.init. This armada of icebergs is only imposed in the first time step. 
      if (forcing_icb == 1) then
        if (istep .eq. 1) then
          call iceberg_forcing
        endif
      endif

#if ( ICEBERG == 2 ) 
! Introduce daily amount of icebergs
      call introduce_icebergs(istep) ![m3/day]
! At last day of the year, use sum of iceflux to create icebergs for the next year           
      if (mod(istep,days_year360d_i).eq.0) then
#if ( ISM != 2 )
! B) Add new icebergs from iLOVECLIM from excess snow
        write(iceberg_info_out_id,*) 
     &   'Converting excess snow flux to icebergs'
        iceflux_in_snow = iceflux_in_snow * area ! [m to m3/year]
        write(iceberg_info_out_id,*) 
     &   'volume of icebergs in m3',sum(iceflux_in_snow)
! call routine to convert ice volume into icebergs; icebergs given to iceberg module by introduce_icebergs
        call convert_flux_to_icebergs(iceflux_in_snow)
#elif ( ISM == 2 )
! C) Add new icebergs from iLOVECLIM from GRISLI calving flux
        write(iceberg_info_out_id,*) 
     &   'Converting GRISLI calving flux to icebergs'
         iceflux_in_calv = calgrisCLIO * ddtb * days_year360d_i ! [m3/s to m3/year]
        write(iceberg_info_out_id,*) 'volume of icebergs in m3/year'
     &                               ,sum(iceflux_in_calv)
! call routine to convert ice volume into icebergs; icebergs given to iceberg module by introduce_icebergs
        call convert_flux_to_icebergs(iceflux_in_calv)
#endif
      endif
#endif
        
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!- Iceberg position, movement and melt is calculated
!- reset melt; call icebtraj, which makes call icebdyn:

!----------------------------------------------------------------------
!- reset fonte and dVol
      dVol_icb=0.

!----------------------------------------------------------------------
      if (lmx .gt. 0) then
        call icebtraj(l)

!----------------------------------------------------------------------
!- once the writing loop was entered, kiceb can go from -1 (ELIMINATEd) to -2 (free spot)
        do l=1,lmx
          if (kiceb(l).eq.(-1)) then
             kiceb(l)=-2
          endif
        end do

!----------------------------------------------------------------------
! rearrange lmx array, removing empty spots and limiting length
        call rearrange_lmx_arrays


!----------------------------------------------------------------------
! Create output arrays on CLIO grid
        call iceb_list2clio
! Create text file with iceberg track output
        output_tracks = .True.
        if (output_tracks) then
          call iceb_writetracks(istep)
        endif
              
!----------------------------------------------------------------------
        
      endif !if lmx gt 0)

      if (mod(istep,days_year360d_i).eq.0) then
         write(iceberg_info_out_id,*)'istep & number of icebergs: ',
     &       istep,count(kiceb(:).gt.0)
      endif

!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
      end do ! while ((dticeb*it_icb).ne.(dts(ks2)*istep))
       
       
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
!---+----1----+----2----+----3----+----4----+----5----+----6----+----7-|--+----|
      return

!- fin de la routine iceberg -
      end subroutine iceberg
